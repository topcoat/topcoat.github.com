<?xml version="1.0" encoding="utf-8" ?><feed xmlns="http://www.w3.org/2005/Atom"><title>Topcoat</title><subtitle>CSS for clean and fast web apps.</subtitle><link href="http://topcoat.io/atom.xml" rel="self"></link><link href="http://topcoat.io"></link><updated>2013-08-19T17:55:03.761Z</updated><id>http://topcoat.io/</id><entry><title>npm all the things</title><link href="http://topcoat.io/posts/npm-all-the-things/"></link><updated>2013-08-19T17:54:05.000Z</updated><id>http://topcoat.io/posts/npm-all-the-things/</id><content type="html">&lt;p&gt;Topcoat 0.6.0 is hot off the wire and we are super happy with a few of the new additions. Here is a recap of what went into this release and some of the reasoning behind it.&lt;/p&gt;

&lt;h2&gt;Codepens&lt;/h2&gt;

&lt;p&gt;One of my favorite additions to this release is a process based on our continuing dedication to transparency and feedback from all of you. We wanted a way to share what we are currently working on as well as have a place to iterate in the open that lowered any hurdles to feedback people might have. &lt;a href=&quot;http://codepen.io/Topcoat/&quot;&gt;Codepen.io&lt;/a&gt; has been the perfect solution. It has already led to invaluable discussions that ultimately ended up as additions to Topcoat.&lt;/p&gt;

&lt;h2&gt;Package Management&lt;/h2&gt;

&lt;p&gt;Originally we were very reluctant to choose a package management system since there were so many competing in this space which all had their virtues. This led to a lot of work on my part and a lot of tough problems for the build script. We have settled on &lt;a href=&quot;http://npmjs.org&quot;&gt;NPM&lt;/a&gt; since this was already a requirement we inherited from &lt;a href=&quot;http://gruntjs.com&quot;&gt;grunt&lt;/a&gt; and is also the most mature and feature rich of the solutions out there. As of Topcoat 0.6.0 all of our components are published to NPM for easy installation. This isn&amp;#39;t to say we won&amp;#39;t be publishing to other systems in the future, this is just what we will use to manage packages for development.&lt;/p&gt;

&lt;h2&gt;Component Development&lt;/h2&gt;

&lt;p&gt;We have been getting a lot of requests to explain how to add components to Topcoat and to be honest until this release it was a lot harder than we wanted it to be. As of this release we are really happy with our component development proces. Tutorial being worked on right now!&lt;/p&gt;

&lt;h2&gt;Effeckt â™¥&lt;/h2&gt;

&lt;p&gt;Our very own Andrei has been researching using effeckt.css with Topcoat and we are really excited with the initial output. Check it out at &lt;a href=&quot;http://topcoat.io/topcoat-effeckt/dist/&quot;&gt;Topcoat + Effeckt&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;New components&lt;/h2&gt;

&lt;p&gt;Last but not least we added a few new components that we feel are worth talking about. We have been looking for a way to style inputs that is portable, accessible and perform well. Seems simple enough right? After a few iterations we settled on a CSS only solution with inputs nested in labels.Check out our &lt;a href=&quot;http://codepen.io/Topcoat/pen/HDcJj&quot;&gt;radio button&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Coming up in 0.7.0&lt;/h2&gt;

&lt;p&gt;The focus for the next release is to tidy up our desktop components to have parity with the &lt;a href=&quot;http://github.com/topcoat/design&quot;&gt;design comps&lt;/a&gt;. Previously the focus had been on mobile components since PhoneGap users were experiencing the most need. Keep an eye on &lt;a href=&quot;http://codepen.io/Topcoat&quot;&gt;the Topcoat Codepen page&lt;/a&gt; to get a sneak peek at the components that are coming as well. As always forks are appreciated!&lt;/p&gt;
</content><author><name>Kristofer Joseph</name><uri>http://kristoferjoseph.com/</uri></author></entry><entry><title>Benchmarks and Results for Topcoat</title><link href="http://topcoat.io/posts/benchmarks/"></link><updated>2013-07-15T20:49:00.000Z</updated><id>http://topcoat.io/posts/benchmarks/</id><content type="html">&lt;p&gt;Topcoat is built with performance in mind and for that we are striving to benchmark everything. If you visit &lt;a href=&quot;http://bench.topcoat.io&quot;&gt;bench.topcoat.io&lt;/a&gt; you will see the components from our latest release and their benchmark over time.&lt;/p&gt;

&lt;p&gt;The goal of the website is to have publicly accessible benchmark results for our users and for us to spot regressions and performance issues.&lt;/p&gt;

&lt;h2&gt;Key metrics&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Mean frame time (Frame time) - not frames per second (FPS) this is actually a more accurate rating of performance, a good article with an in depth explanation: &lt;a href=&quot;http://www.mvps.org/directx/articles/fps_versus_frame_time.htm&quot;&gt;fps versus frame time&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Load time&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Layout time&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;screenshot.png&quot; alt=&quot;plot screenshot&quot; title=&quot;Plot screenshot&quot;/&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The server can also be used offline for components development. You can make changes to a component, say for example swap box-shadow for for a dark border with reduced opacity, the plots can offer you a nicer visualisation of the performance impact.&lt;/p&gt;

&lt;p&gt;There is a &lt;a href=&quot;http://www.youtube.com/watch?v=Mhw4Sf1WWwQ&quot;&gt;screencast&lt;/a&gt; where you can see how to get started with using it for your own needs.&lt;/p&gt;

&lt;iframe class=&quot;video&quot; src=&quot;//www.youtube.com/embed/Mhw4Sf1WWwQ&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;h2&gt;How&lt;/h2&gt;

&lt;p&gt;We are using &lt;a href=&quot;http://www.chromium.org/developers/telemetry&quot;&gt;Chromium Telemetry&lt;/a&gt;. Telemetry is a python powered framework used for cross-(chrome)-platform performance testing. It abstracts launching, connecting, and opening a page and records the metrics mentioned above and many others.&lt;/p&gt;

&lt;p&gt;We have a Grunt task that takes results and pushes them to the server.&lt;/p&gt;

&lt;p&gt;The server is written in Node and uses &lt;a href=&quot;http://www.flotcharts.org/&quot;&gt;http://www.flotcharts.org/&lt;/a&gt; to display the results.&lt;/p&gt;

&lt;h2&gt;Usage guide&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://www.chromium.org/developers/how-tos/get-the-code&quot;&gt;chromium.org/developers/how-tos/get-the-code&lt;/a&gt; offers step by step instructions on how to download Chromium. You will need it entirely if you want to run Telemetry so be ready for a ~1.6GB download.&lt;/li&gt;
&lt;li&gt;In &lt;code&gt;chromium/src/tools/perf/page_sets&lt;/code&gt; you will find &lt;em&gt;**.json&lt;/em&gt;* files which are required as input when running the telemetry tests. There is a specific boilerplate json that you will need to write in order to tell Telemetry where the page you want to benchmark is located.&lt;/li&gt;
&lt;li&gt;To run Telemetry you will need to be in &lt;code&gt;chromium/src/tools/perf&lt;/code&gt;. The command is
&lt;code&gt;./run_multipage_benchmarks --browser=system loading_benchmark page_sets/topcoat_buttons-base.test.json -o /tmp/loading_benchmark_topcoat_buttons-base.txt&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;loading_benchmark&lt;/strong&gt; parameter tells Telemetry to record load time, layout time, the time it took to parse the HTML etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;smoothness_benchmark&lt;/strong&gt; parameter tells Telemetry to scroll the page while recording, this time it captures mean frame time, jank count and many others.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;After you have the data you can use the Grunt task in the Topcoat repo to parse the files that have specified as output and submit them to your clone of Topcoat Server running locally.
All of these steps are also shown in the &lt;a href=&quot;http://www.youtube.com/watch?v=Mhw4Sf1WWwQ&quot;&gt;screencast&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If there are any questions you can use the comments below, I&amp;#39;m looking forward to seeing pull requests/issues reporting for the project. You can also hit me up on twitter &lt;a href=&quot;http://twitter.com/ndreio&quot;&gt;@ndreio&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Useful links:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;main home page &lt;a href=&quot;http://topcoat.io&quot;&gt;http://topcoat.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;github repository &lt;a href=&quot;https://github.com/topcoat/&quot;&gt;https://github.com/topcoat/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Topcoat Server &lt;a href=&quot;https://github.com/topcoat/topcoat-server&quot;&gt;https://github.com/topcoat/topcoat-server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;more about Chromium Telemetry &lt;a href=&quot;http://www.chromium.org/developers/telemetry&quot;&gt;http://www.chromium.org/developers/telemetry&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content><author><name>Andrei Oprea</name><uri>http://github.com/piatra</uri></author></entry><entry><title>Topcoat CI Environment</title><link href="http://topcoat.io/posts/topcoat-ci/"></link><updated>2013-06-27T21:17:00.000Z</updated><id>http://topcoat.io/posts/topcoat-ci/</id><content type="html">&lt;p&gt;Today we are open-sourcing our &lt;a href=&quot;https://github.com/topcoat/topcoat-ci-config&quot;&gt;Jenkins CI configs&lt;/a&gt; on Github. With Jenkins CI environment, every commit that goes into Topcoat components triggers the chain of building, unit testing and performance benchmark testing. So if something goes wrong, we know it right away.&lt;/p&gt;

&lt;p&gt;If you are interested in setting up your own Jenkins CI environment for Topcoat, be sure to go check it out. In the topcoat-ci-config Github repo, we have Jenkins job config (xml file) for all released Topcoat components (and we will keep adding more as they are ready). To use them, you can either copy the xml file and put it into your Jenkins job folder; or you can just read the plain xml and grab the part you want.&lt;/p&gt;

&lt;p&gt;We hope you will like it.&lt;/p&gt;
</content><author><name>Yinan Liu</name><uri>http://www.linkedin.com/in/yinanliu</uri></author></entry><entry><title>Introducing Topcoat</title><link href="http://topcoat.io/posts/introducing-topcoat/"></link><updated>2013-06-05T22:21:00.000Z</updated><id>http://topcoat.io/posts/introducing-topcoat/</id><content type="html">&lt;p&gt;Topcoat is a brand new open source CSS library designed to help developers build web apps with an emphasis on speed. It evolved from the Adobe design language developed for Brackets, Edge Reflow, and feedback from the PhoneGap app developer community. &lt;/p&gt;

&lt;p&gt;Topcoat includes: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Our design research&lt;/li&gt;
&lt;li&gt;The resulting super customizable CSS build&lt;/li&gt;
&lt;li&gt;Automatically generated style guides&lt;/li&gt;
&lt;li&gt;PSD and other design artifacts&lt;/li&gt;
&lt;li&gt;A collection of simple and clean SVG icons&lt;/li&gt;
&lt;li&gt;The beautiful Adobe Source Sans Pro font family&lt;/li&gt;
&lt;li&gt;Benchmarking tools&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is a sweet little package, and weâ€™re actively working on it to make it even more awesome with fresh releases every month. Our biggest goal is to start building a community around Topcoat and weâ€™re structuring the project so contribution is super crazy simple to do. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;example.png&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;Performance first!&lt;/h2&gt;

&lt;p&gt;Apps need to be fast and so Topcoat is being built with speed in mind. Weâ€™re benchmarking everything we can and plan to do even more as the project evolves. It is an early time but weâ€™re already looking at how each CSS control impacts loading, layout, and frames per second. &lt;br/&gt;
It is an awesome system, totally open source, and would be great stand alone tool for teams looking to find ways to measure their own apps performance. &lt;/p&gt;

&lt;h2&gt;Custom builds and theming&lt;/h2&gt;

&lt;p&gt;Topcoat contains not only CSS but also all the tools we used to build it. You can easily customize and extend Topcoat to craft it to exactly the experience you need. The controls in Topcoat CSS are authored in Stylus, and we utilize many of its features to allow for a clean separation of reset, from layout, from aesthetic, and between platforms. Each control lives in its own git repo. It is in this way we can construct builds that target specific platforms, with only the controls you need, and only for the devices you are targeting. &lt;/p&gt;

&lt;p&gt;Creating a completely optimized builds are crucial feature for building complex applications, and especially so when you want to do everything possible to make your app crazy fast. &lt;/p&gt;

&lt;h2&gt;Using Topcoat&lt;/h2&gt;

&lt;p&gt;Topcoat can be dropped into a web app and used immediately. Even better you can tune your performance down to each discrete CSS control.&lt;/p&gt;

&lt;h3&gt;Getting started quickly&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Clone from Github or download a specific version (E.g. &lt;code&gt;topcoat-0.3.0&lt;/code&gt;) from &lt;a href=&quot;http://topcoat.io&quot;&gt;http://topcoat.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Reference the /css (Protip: look in /doc for usage guides.)&lt;/li&gt;
&lt;li&gt;Holy smokes there is no step three!&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;Custom builds for web hackers&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Fork &lt;a href=&quot;http://github.com/Topcoat/Topcoat&quot;&gt;http://github.com/Topcoat/Topcoat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Install Node and run &lt;code&gt;npm install -g grunt-cli &amp;amp;&amp;amp; npm install .&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Modify &lt;code&gt;package.json&lt;/code&gt; to point to only the controls you need&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;grunt&lt;/code&gt; to generate your custom build&lt;/li&gt;
&lt;li&gt;Fork (or write your own) controls and modify &lt;code&gt;package.json&lt;/code&gt; point to them&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;Theming for the web craftsman&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Fork &lt;a href=&quot;http://github.com/Topcoat/theme&quot;&gt;http://github.com/Topcoat/theme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Modify various variables files (We are going to simplify this further!)&lt;/li&gt;
&lt;li&gt;Modify &lt;code&gt;./topcoat-X.X.X/package.json&lt;/code&gt; to point to your theme and run &lt;code&gt;grunt&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We need your help! Topcoat is totally open source software. There are bugs, and weâ€™re still solidifying our architecture, so there are MANY ways to contribute!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Our main home is &lt;a href=&quot;http://topcoat.io&quot;&gt;http://topcoat.io&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;Learn everything else about Topcoat on our wiki: &lt;a href=&quot;https://github.com/topcoat/topcoat/wiki&quot;&gt;https://github.com/topcoat/topcoat/wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Chat us up on our mailing list: &lt;a href=&quot;http://groups.google.com/group/topcoat&quot;&gt;http://groups.google.com/group/topcoat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Request features, and file bugs, in our issue tracker. Note each control in Topcoat has its own git repo, thus versions, and therefore issue trackers too. &lt;a href=&quot;http://github.com/topcoat&quot;&gt;http://github.com/topcoat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tweet us up on the Twitters: &lt;a href=&quot;http://twitter.com/topcoat&quot;&gt;http://twitter.com/topcoat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Follow the lead hacker Kristofer Joseph too: &lt;a href=&quot;http://twitter.com/dam&quot;&gt;http://twitter.com/dam&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Join us in making it easier than ever to craft fast apps using web standards that look as good as they feel.&lt;/p&gt;
</content><author><name>Brian LeRoux</name><uri>http://brian.io/</uri></author></entry></feed>